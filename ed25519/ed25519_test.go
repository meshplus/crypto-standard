package ed25519

import (
	"bytes"
	"github.com/stretchr/testify/assert"
	"testing"
)

func TestSingleVerify(t *testing.T) {
	for i := range testDate {
		msg := []byte(testDate[i].msg)
		reader := bytes.NewBuffer(testDate[i].sk[:])
		sk, pk := GenerateKey(reader)
		assert.True(t, bytes.Equal(pk[:], testDate[i].pk[:]))
		sign, err := sk.Sign(nil, msg, nil)
		assert.Nil(t, err)
		assert.True(t, bytes.Equal(sign, testDate[i].sign[:]))
		b, err := pk.Verify(nil, sign, msg)
		assert.Nil(t, err)
		assert.True(t, b)
	}
}
func TestKey(t *testing.T) {
	for i := range testDate {
		reader := bytes.NewBuffer(testDate[i].sk[:])
		sk, pk := GenerateKey(reader)
		skBytes, _ := sk.Bytes()
		assert.Equal(t, skBytes, sk[:])
		assert.Equal(t, pk, sk.Public())
		pkBytes, _ := pk.Bytes()
		pkNew := new(EDDSAPublicKey)
		assert.Nil(t, pkNew.FromBytes(pkBytes, 0))
		pkBytesNew, _ := pkNew.Bytes()
		assert.Equal(t, pkBytes[:], pkBytesNew[:])
	}
}

type testDateT struct {
	sk   [32]byte
	pk   [32]byte
	sign [64]byte
	msg  string
}

var testDate = [11]testDateT{
	{[32]byte{0x9d, 0x61, 0xb1, 0x9d, 0xef, 0xfd, 0x5a, 0x60, 0xba, 0x84, 0x4a, 0xf4, 0x92, 0xec, 0x2c, 0xc4, 0x44, 0x49, 0xc5, 0x69, 0x7b, 0x32, 0x69, 0x19, 0x70, 0x3b, 0xac, 0x03, 0x1c, 0xae, 0x7f, 0x60},
		[32]byte{0xd7, 0x5a, 0x98, 0x01, 0x82, 0xb1, 0x0a, 0xb7, 0xd5, 0x4b, 0xfe, 0xd3, 0xc9, 0x64, 0x07, 0x3a, 0x0e, 0xe1, 0x72, 0xf3, 0xda, 0xa6, 0x23, 0x25, 0xaf, 0x02, 0x1a, 0x68, 0xf7, 0x07, 0x51, 0x1a},
		[64]byte{0xe5, 0x56, 0x43, 0x00, 0xc3, 0x60, 0xac, 0x72, 0x90, 0x86, 0xe2, 0xcc, 0x80, 0x6e, 0x82, 0x8a, 0x84, 0x87, 0x7f, 0x1e, 0xb8, 0xe5, 0xd9, 0x74, 0xd8, 0x73, 0xe0, 0x65, 0x22, 0x49, 0x01, 0x55, 0x5f, 0xb8, 0x82, 0x15, 0x90, 0xa3, 0x3b, 0xac, 0xc6, 0x1e, 0x39, 0x70, 0x1c, 0xf9, 0xb4, 0x6b, 0xd2, 0x5b, 0xf5, 0xf0, 0x59, 0x5b, 0xbe, 0x24, 0x65, 0x51, 0x41, 0x43, 0x8e, 0x7a, 0x10, 0x0b},
		""},
	{[32]byte{0x4c, 0xcd, 0x08, 0x9b, 0x28, 0xff, 0x96, 0xda, 0x9d, 0xb6, 0xc3, 0x46, 0xec, 0x11, 0x4e, 0x0f, 0x5b, 0x8a, 0x31, 0x9f, 0x35, 0xab, 0xa6, 0x24, 0xda, 0x8c, 0xf6, 0xed, 0x4f, 0xb8, 0xa6, 0xfb}, [32]byte{0x3d, 0x40, 0x17, 0xc3, 0xe8, 0x43, 0x89, 0x5a, 0x92, 0xb7, 0x0a, 0xa7, 0x4d, 0x1b, 0x7e, 0xbc, 0x9c, 0x98, 0x2c, 0xcf, 0x2e, 0xc4, 0x96, 0x8c, 0xc0, 0xcd, 0x55, 0xf1, 0x2a, 0xf4, 0x66, 0x0c}, [64]byte{0x92, 0xa0, 0x09, 0xa9, 0xf0, 0xd4, 0xca, 0xb8, 0x72, 0x0e, 0x82, 0x0b, 0x5f, 0x64, 0x25, 0x40, 0xa2, 0xb2, 0x7b, 0x54, 0x16, 0x50, 0x3f, 0x8f, 0xb3, 0x76, 0x22, 0x23, 0xeb, 0xdb, 0x69, 0xda, 0x08, 0x5a, 0xc1, 0xe4, 0x3e, 0x15, 0x99, 0x6e, 0x45, 0x8f, 0x36, 0x13, 0xd0, 0xf1, 0x1d, 0x8c, 0x38, 0x7b, 0x2e, 0xae, 0xb4, 0x30, 0x2a, 0xee, 0xb0, 0x0d, 0x29, 0x16, 0x12, 0xbb, 0x0c, 0x00}, "\x72"},
	{[32]byte{0xc5, 0xaa, 0x8d, 0xf4, 0x3f, 0x9f, 0x83, 0x7b, 0xed, 0xb7, 0x44, 0x2f, 0x31, 0xdc, 0xb7, 0xb1, 0x66, 0xd3, 0x85, 0x35, 0x07, 0x6f, 0x09, 0x4b, 0x85, 0xce, 0x3a, 0x2e, 0x0b, 0x44, 0x58, 0xf7}, [32]byte{0xfc, 0x51, 0xcd, 0x8e, 0x62, 0x18, 0xa1, 0xa3, 0x8d, 0xa4, 0x7e, 0xd0, 0x02, 0x30, 0xf0, 0x58, 0x08, 0x16, 0xed, 0x13, 0xba, 0x33, 0x03, 0xac, 0x5d, 0xeb, 0x91, 0x15, 0x48, 0x90, 0x80, 0x25}, [64]byte{0x62, 0x91, 0xd6, 0x57, 0xde, 0xec, 0x24, 0x02, 0x48, 0x27, 0xe6, 0x9c, 0x3a, 0xbe, 0x01, 0xa3, 0x0c, 0xe5, 0x48, 0xa2, 0x84, 0x74, 0x3a, 0x44, 0x5e, 0x36, 0x80, 0xd7, 0xdb, 0x5a, 0xc3, 0xac, 0x18, 0xff, 0x9b, 0x53, 0x8d, 0x16, 0xf2, 0x90, 0xae, 0x67, 0xf7, 0x60, 0x98, 0x4d, 0xc6, 0x59, 0x4a, 0x7c, 0x15, 0xe9, 0x71, 0x6e, 0xd2, 0x8d, 0xc0, 0x27, 0xbe, 0xce, 0xea, 0x1e, 0xc4, 0x0a}, "\xaf\x82"},
	{[32]byte{0x0d, 0x4a, 0x05, 0xb0, 0x73, 0x52, 0xa5, 0x43, 0x6e, 0x18, 0x03, 0x56, 0xda, 0x0a, 0xe6, 0xef, 0xa0, 0x34, 0x5f, 0xf7, 0xfb, 0x15, 0x72, 0x57, 0x57, 0x72, 0xe8, 0x00, 0x5e, 0xd9, 0x78, 0xe9}, [32]byte{0xe6, 0x1a, 0x18, 0x5b, 0xce, 0xf2, 0x61, 0x3a, 0x6c, 0x7c, 0xb7, 0x97, 0x63, 0xce, 0x94, 0x5d, 0x3b, 0x24, 0x5d, 0x76, 0x11, 0x4d, 0xd4, 0x40, 0xbc, 0xf5, 0xf2, 0xdc, 0x1a, 0xa5, 0x70, 0x57}, [64]byte{0xd9, 0x86, 0x8d, 0x52, 0xc2, 0xbe, 0xbc, 0xe5, 0xf3, 0xfa, 0x5a, 0x79, 0x89, 0x19, 0x70, 0xf3, 0x09, 0xcb, 0x65, 0x91, 0xe3, 0xe1, 0x70, 0x2a, 0x70, 0x27, 0x6f, 0xa9, 0x7c, 0x24, 0xb3, 0xa8, 0xe5, 0x86, 0x06, 0xc3, 0x8c, 0x97, 0x58, 0x52, 0x9d, 0xa5, 0x0e, 0xe3, 0x1b, 0x82, 0x19, 0xcb, 0xa4, 0x52, 0x71, 0xc6, 0x89, 0xaf, 0xa6, 0x0b, 0x0e, 0xa2, 0x6c, 0x99, 0xdb, 0x19, 0xb0, 0x0c}, "\xcb\xc7\x7b"},
	{[32]byte{0x6d, 0xf9, 0x34, 0x0c, 0x13, 0x8c, 0xc1, 0x88, 0xb5, 0xfe, 0x44, 0x64, 0xeb, 0xaa, 0x3f, 0x7f, 0xc2, 0x06, 0xa2, 0xd5, 0x5c, 0x34, 0x34, 0x70, 0x7e, 0x74, 0xc9, 0xfc, 0x04, 0xe2, 0x0e, 0xbb}, [32]byte{0xc0, 0xda, 0xc1, 0x02, 0xc4, 0x53, 0x31, 0x86, 0xe2, 0x5d, 0xc4, 0x31, 0x28, 0x47, 0x23, 0x53, 0xea, 0xab, 0xdb, 0x87, 0x8b, 0x15, 0x2a, 0xeb, 0x8e, 0x00, 0x1f, 0x92, 0xd9, 0x02, 0x33, 0xa7}, [64]byte{0x12, 0x4f, 0x6f, 0xc6, 0xb0, 0xd1, 0x00, 0x84, 0x27, 0x69, 0xe7, 0x1b, 0xd5, 0x30, 0x66, 0x4d, 0x88, 0x8d, 0xf8, 0x50, 0x7d, 0xf6, 0xc5, 0x6d, 0xed, 0xfd, 0xb5, 0x09, 0xae, 0xb9, 0x34, 0x16, 0xe2, 0x6b, 0x91, 0x8d, 0x38, 0xaa, 0x06, 0x30, 0x5d, 0xf3, 0x09, 0x56, 0x97, 0xc1, 0x8b, 0x2a, 0xa8, 0x32, 0xea, 0xa5, 0x2e, 0xdc, 0x0a, 0xe4, 0x9f, 0xba, 0xe5, 0xa8, 0x5e, 0x15, 0x0c, 0x07}, "\x5f\x4c\x89\x89"},
	{[32]byte{0xb7, 0x80, 0x38, 0x1a, 0x65, 0xed, 0xf8, 0xb7, 0x8f, 0x69, 0x45, 0xe8, 0xdb, 0xec, 0x79, 0x41, 0xac, 0x04, 0x9f, 0xd4, 0xc6, 0x10, 0x40, 0xcf, 0x0c, 0x32, 0x43, 0x57, 0x97, 0x5a, 0x29, 0x3c}, [32]byte{0xe2, 0x53, 0xaf, 0x07, 0x66, 0x80, 0x4b, 0x86, 0x9b, 0xb1, 0x59, 0x5b, 0xe9, 0x76, 0x5b, 0x53, 0x48, 0x86, 0xbb, 0xaa, 0xb8, 0x30, 0x5b, 0xf5, 0x0d, 0xbc, 0x7f, 0x89, 0x9b, 0xfb, 0x5f, 0x01}, [64]byte{0xb2, 0xfc, 0x46, 0xad, 0x47, 0xaf, 0x46, 0x44, 0x78, 0xc1, 0x99, 0xe1, 0xf8, 0xbe, 0x16, 0x9f, 0x1b, 0xe6, 0x32, 0x7c, 0x7f, 0x9a, 0x0a, 0x66, 0x89, 0x37, 0x1c, 0xa9, 0x4c, 0xaf, 0x04, 0x06, 0x4a, 0x01, 0xb2, 0x2a, 0xff, 0x15, 0x20, 0xab, 0xd5, 0x89, 0x51, 0x34, 0x16, 0x03, 0xfa, 0xed, 0x76, 0x8c, 0xf7, 0x8c, 0xe9, 0x7a, 0xe7, 0xb0, 0x38, 0xab, 0xfe, 0x45, 0x6a, 0xa1, 0x7c, 0x09}, "\x18\xb6\xbe\xc0\x97"},
	{[32]byte{0x78, 0xae, 0x9e, 0xff, 0xe6, 0xf2, 0x45, 0xe9, 0x24, 0xa7, 0xbe, 0x63, 0x04, 0x11, 0x46, 0xeb, 0xc6, 0x70, 0xdb, 0xd3, 0x06, 0x0c, 0xba, 0x67, 0xfb, 0xc6, 0x21, 0x6f, 0xeb, 0xc4, 0x45, 0x46}, [32]byte{0xfb, 0xcf, 0xbf, 0xa4, 0x05, 0x05, 0xd7, 0xf2, 0xbe, 0x44, 0x4a, 0x33, 0xd1, 0x85, 0xcc, 0x54, 0xe1, 0x6d, 0x61, 0x52, 0x60, 0xe1, 0x64, 0x0b, 0x2b, 0x50, 0x87, 0xb8, 0x3e, 0xe3, 0x64, 0x3d}, [64]byte{0x6e, 0xd6, 0x29, 0xfc, 0x1d, 0x9c, 0xe9, 0xe1, 0x46, 0x87, 0x55, 0xff, 0x63, 0x6d, 0x5a, 0x3f, 0x40, 0xa5, 0xd9, 0xc9, 0x1a, 0xfd, 0x93, 0xb7, 0x9d, 0x24, 0x18, 0x30, 0xf7, 0xe5, 0xfa, 0x29, 0x85, 0x4b, 0x8f, 0x20, 0xcc, 0x6e, 0xec, 0xbb, 0x24, 0x8d, 0xbd, 0x8d, 0x16, 0xd1, 0x4e, 0x99, 0x75, 0x21, 0x94, 0xe4, 0x90, 0x4d, 0x09, 0xc7, 0x4d, 0x63, 0x95, 0x18, 0x83, 0x9d, 0x23, 0x00}, "\x89\x01\x0d\x85\x59\x72"},
	{[32]byte{0x69, 0x18, 0x65, 0xbf, 0xc8, 0x2a, 0x1e, 0x4b, 0x57, 0x4e, 0xec, 0xde, 0x4c, 0x75, 0x19, 0x09, 0x3f, 0xaf, 0x0c, 0xf8, 0x67, 0x38, 0x02, 0x34, 0xe3, 0x66, 0x46, 0x45, 0xc6, 0x1c, 0x5f, 0x79}, [32]byte{0x98, 0xa5, 0xe3, 0xa3, 0x6e, 0x67, 0xaa, 0xba, 0x89, 0x88, 0x8b, 0xf0, 0x93, 0xde, 0x1a, 0xd9, 0x63, 0xe7, 0x74, 0x01, 0x3b, 0x39, 0x02, 0xbf, 0xab, 0x35, 0x6d, 0x8b, 0x90, 0x17, 0x8a, 0x63}, [64]byte{0x6e, 0x0a, 0xf2, 0xfe, 0x55, 0xae, 0x37, 0x7a, 0x6b, 0x7a, 0x72, 0x78, 0xed, 0xfb, 0x41, 0x9b, 0xd3, 0x21, 0xe0, 0x6d, 0x0d, 0xf5, 0xe2, 0x70, 0x37, 0xdb, 0x88, 0x12, 0xe7, 0xe3, 0x52, 0x98, 0x10, 0xfa, 0x55, 0x52, 0xf6, 0xc0, 0x02, 0x09, 0x85, 0xca, 0x17, 0xa0, 0xe0, 0x2e, 0x03, 0x6d, 0x7b, 0x22, 0x2a, 0x24, 0xf9, 0x9b, 0x77, 0xb7, 0x5f, 0xdd, 0x16, 0xcb, 0x05, 0x56, 0x81, 0x07}, "\xb4\xa8\xf3\x81\xe7\x0e\x7a"},
	{[32]byte{0x3b, 0x26, 0x51, 0x6f, 0xb3, 0xdc, 0x88, 0xeb, 0x18, 0x1b, 0x9e, 0xd7, 0x3f, 0x0b, 0xcd, 0x52, 0xbc, 0xd6, 0xb4, 0xc7, 0x88, 0xe4, 0xbc, 0xaf, 0x46, 0x05, 0x7f, 0xd0, 0x78, 0xbe, 0xe0, 0x73}, [32]byte{0xf8, 0x1f, 0xb5, 0x4a, 0x82, 0x5f, 0xce, 0xd9, 0x5e, 0xb0, 0x33, 0xaf, 0xcd, 0x64, 0x31, 0x40, 0x75, 0xab, 0xfb, 0x0a, 0xbd, 0x20, 0xa9, 0x70, 0x89, 0x25, 0x03, 0x43, 0x6f, 0x34, 0xb8, 0x63}, [64]byte{0xd6, 0xad, 0xde, 0xc5, 0xaf, 0xb0, 0x52, 0x8a, 0xc1, 0x7b, 0xb1, 0x78, 0xd3, 0xe7, 0xf2, 0x88, 0x7f, 0x9a, 0xdb, 0xb1, 0xad, 0x16, 0xe1, 0x10, 0x54, 0x5e, 0xf3, 0xbc, 0x57, 0xf9, 0xde, 0x23, 0x14, 0xa5, 0xc8, 0x38, 0x8f, 0x72, 0x3b, 0x89, 0x07, 0xbe, 0x0f, 0x3a, 0xc9, 0x0c, 0x62, 0x59, 0xbb, 0xe8, 0x85, 0xec, 0xc1, 0x76, 0x45, 0xdf, 0x3d, 0xb7, 0xd4, 0x88, 0xf8, 0x05, 0xfa, 0x08}, "\x42\x84\xab\xc5\x1b\xb6\x72\x35"},
	{[32]byte{0xed, 0xc6, 0xf5, 0xfb, 0xdd, 0x1c, 0xee, 0x4d, 0x10, 0x1c, 0x06, 0x35, 0x30, 0xa3, 0x04, 0x90, 0xb2, 0x21, 0xbe, 0x68, 0xc0, 0x36, 0xf5, 0xb0, 0x7d, 0x0f, 0x95, 0x3b, 0x74, 0x5d, 0xf1, 0x92}, [32]byte{0xc1, 0xa4, 0x9c, 0x66, 0xe6, 0x17, 0xf9, 0xef, 0x5e, 0xc6, 0x6b, 0xc4, 0xc6, 0x56, 0x4c, 0xa3, 0x3d, 0xe2, 0xa5, 0xfb, 0x5e, 0x14, 0x64, 0x06, 0x2e, 0x6d, 0x6c, 0x62, 0x19, 0x15, 0x5e, 0xfd}, [64]byte{0x2c, 0x76, 0xa0, 0x4a, 0xf2, 0x39, 0x1c, 0x14, 0x70, 0x82, 0xe3, 0x3f, 0xaa, 0xcd, 0xbe, 0x56, 0x64, 0x2a, 0x1e, 0x13, 0x4b, 0xd3, 0x88, 0x62, 0x0b, 0x85, 0x2b, 0x90, 0x1a, 0x6b, 0xc1, 0x6f, 0xf6, 0xc9, 0xcc, 0x94, 0x04, 0xc4, 0x1d, 0xea, 0x12, 0xed, 0x28, 0x1d, 0xa0, 0x67, 0xa1, 0x51, 0x38, 0x66, 0xf9, 0xd9, 0x64, 0xf8, 0xbd, 0xd2, 0x49, 0x53, 0x85, 0x6c, 0x50, 0x04, 0x29, 0x01}, "\x67\x2b\xf8\x96\x5d\x04\xbc\x51\x46"},
	{[32]byte{0x4e, 0x7d, 0x21, 0xfb, 0x3b, 0x18, 0x97, 0x57, 0x1a, 0x44, 0x58, 0x33, 0xbe, 0x0f, 0x9f, 0xd4, 0x1c, 0xd6, 0x2b, 0xe3, 0xaa, 0x04, 0x04, 0x0f, 0x89, 0x34, 0xe1, 0xfc, 0xbd, 0xca, 0xcd, 0x45}, [32]byte{0x31, 0xb2, 0x52, 0x4b, 0x83, 0x48, 0xf7, 0xab, 0x1d, 0xfa, 0xfa, 0x67, 0x5c, 0xc5, 0x38, 0xe9, 0xa8, 0x4e, 0x3f, 0xe5, 0x81, 0x9e, 0x27, 0xc1, 0x2a, 0xd8, 0xbb, 0xc1, 0xa3, 0x6e, 0x4d, 0xff}, [64]byte{0x28, 0xe4, 0x59, 0x8c, 0x41, 0x5a, 0xe9, 0xde, 0x01, 0xf0, 0x3f, 0x9f, 0x3f, 0xab, 0x4e, 0x91, 0x9e, 0x8b, 0xf5, 0x37, 0xdd, 0x2b, 0x0c, 0xdf, 0x6e, 0x79, 0xb9, 0xe6, 0x55, 0x9c, 0x94, 0x09, 0xd9, 0x15, 0x1a, 0x4c, 0x40, 0xf0, 0x83, 0x19, 0x39, 0x37, 0x62, 0x7c, 0x36, 0x94, 0x88, 0x25, 0x9e, 0x99, 0xda, 0x5a, 0x9f, 0x0a, 0x87, 0x49, 0x7f, 0xa6, 0x69, 0x6a, 0x5d, 0xd6, 0xce, 0x08}, "\x33\xd7\xa7\x86\xad\xed\x8c\x1b\xf6\x91"},
}
